$date
	Wed Jul 13 21:02:23 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ns
$end
$scope module Memoria_tb $end
$var wire 16 ! bus_de_direcciones [15:0] $end
$var wire 32 " bus_de_datos_salida [31:0] $end
$var wire 32 # bus_de_datos_entrada [31:0] $end
$var wire 1 $ bit_de_control_escritura $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$scope module cpu $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 32 ' salidaRegistros [31:0] $end
$var wire 32 ( salidaMemoria [31:0] $end
$var wire 32 ) resultado [31:0] $end
$var wire 1 * Z $end
$var wire 1 + S $end
$var wire 1 , O $end
$var wire 32 - MBR_R [31:0] $end
$var wire 1 . C $end
$var reg 32 / IR [31:0] $end
$var reg 16 0 MAR [15:0] $end
$var reg 32 1 MBR_W [31:0] $end
$var reg 16 2 PC [15:0] $end
$var reg 16 3 addressMemoria [15:0] $end
$var reg 3 4 addressRegistrosEscritura [2:0] $end
$var reg 3 5 addressRegistrosLectura [2:0] $end
$var reg 3 6 dst [2:0] $end
$var reg 32 7 entradaMemoria [31:0] $end
$var reg 32 8 entradaRegistros [31:0] $end
$var reg 8 9 opcode [7:0] $end
$var reg 32 : operandoA [31:0] $end
$var reg 32 ; operandoB [31:0] $end
$var reg 32 < resultadoReg [31:0] $end
$var reg 32 = salidaMemoriaReg [31:0] $end
$var reg 32 > salidaRegistrosReg [31:0] $end
$var reg 3 ? src [2:0] $end
$var reg 4 @ stage [3:0] $end
$var reg 1 $ write $end
$var reg 1 A writeMemoria $end
$var reg 1 B writeRegistros $end
$scope module alu $end
$var wire 5 C opcode [4:0] $end
$var wire 32 D operando_a [31:0] $end
$var wire 32 E operando_b [31:0] $end
$var reg 1 . C $end
$var reg 1 , O $end
$var reg 1 + S $end
$var reg 1 * Z $end
$var reg 32 F resultado [31:0] $end
$var reg 64 G resultado64 [63:0] $end
$upscope $end
$scope module mem $end
$var wire 16 H address [15:0] $end
$var wire 1 % clk $end
$var wire 32 I data_in [31:0] $end
$var wire 32 J data_out [31:0] $end
$var wire 1 A write $end
$scope begin register[0] $end
$var wire 32 K tmp [31:0] $end
$upscope $end
$scope begin register[1] $end
$var wire 32 L tmp [31:0] $end
$upscope $end
$scope begin register[2] $end
$var wire 32 M tmp [31:0] $end
$upscope $end
$scope begin register[3] $end
$var wire 32 N tmp [31:0] $end
$upscope $end
$scope begin register[4] $end
$var wire 32 O tmp [31:0] $end
$upscope $end
$scope begin register[5] $end
$var wire 32 P tmp [31:0] $end
$upscope $end
$scope begin register[6] $end
$var wire 32 Q tmp [31:0] $end
$upscope $end
$scope begin register[7] $end
$var wire 32 R tmp [31:0] $end
$upscope $end
$scope begin register[8] $end
$var wire 32 S tmp [31:0] $end
$upscope $end
$scope begin register[9] $end
$var wire 32 T tmp [31:0] $end
$upscope $end
$scope begin register[10] $end
$var wire 32 U tmp [31:0] $end
$upscope $end
$scope begin register[11] $end
$var wire 32 V tmp [31:0] $end
$upscope $end
$scope begin register[12] $end
$var wire 32 W tmp [31:0] $end
$upscope $end
$scope begin register[13] $end
$var wire 32 X tmp [31:0] $end
$upscope $end
$scope begin register[14] $end
$var wire 32 Y tmp [31:0] $end
$upscope $end
$scope begin register[15] $end
$var wire 32 Z tmp [31:0] $end
$upscope $end
$scope begin register[16] $end
$var wire 32 [ tmp [31:0] $end
$upscope $end
$scope begin register[17] $end
$var wire 32 \ tmp [31:0] $end
$upscope $end
$scope begin register[18] $end
$var wire 32 ] tmp [31:0] $end
$upscope $end
$scope begin register[19] $end
$var wire 32 ^ tmp [31:0] $end
$upscope $end
$scope begin register[20] $end
$var wire 32 _ tmp [31:0] $end
$upscope $end
$scope begin register[21] $end
$var wire 32 ` tmp [31:0] $end
$upscope $end
$scope begin register[22] $end
$var wire 32 a tmp [31:0] $end
$upscope $end
$scope begin register[23] $end
$var wire 32 b tmp [31:0] $end
$upscope $end
$scope begin register[24] $end
$var wire 32 c tmp [31:0] $end
$upscope $end
$scope begin register[25] $end
$var wire 32 d tmp [31:0] $end
$upscope $end
$scope begin register[26] $end
$var wire 32 e tmp [31:0] $end
$upscope $end
$scope begin register[27] $end
$var wire 32 f tmp [31:0] $end
$upscope $end
$scope begin register[28] $end
$var wire 32 g tmp [31:0] $end
$upscope $end
$scope begin register[29] $end
$var wire 32 h tmp [31:0] $end
$upscope $end
$scope begin register[30] $end
$var wire 32 i tmp [31:0] $end
$upscope $end
$scope begin register[31] $end
$var wire 32 j tmp [31:0] $end
$upscope $end
$scope begin register[32] $end
$var wire 32 k tmp [31:0] $end
$upscope $end
$scope begin register[33] $end
$var wire 32 l tmp [31:0] $end
$upscope $end
$scope begin register[34] $end
$var wire 32 m tmp [31:0] $end
$upscope $end
$scope begin register[35] $end
$var wire 32 n tmp [31:0] $end
$upscope $end
$scope begin register[36] $end
$var wire 32 o tmp [31:0] $end
$upscope $end
$scope begin register[37] $end
$var wire 32 p tmp [31:0] $end
$upscope $end
$scope begin register[38] $end
$var wire 32 q tmp [31:0] $end
$upscope $end
$scope begin register[39] $end
$var wire 32 r tmp [31:0] $end
$upscope $end
$scope begin register[40] $end
$var wire 32 s tmp [31:0] $end
$upscope $end
$scope begin register[41] $end
$var wire 32 t tmp [31:0] $end
$upscope $end
$scope begin register[42] $end
$var wire 32 u tmp [31:0] $end
$upscope $end
$scope begin register[43] $end
$var wire 32 v tmp [31:0] $end
$upscope $end
$scope begin register[44] $end
$var wire 32 w tmp [31:0] $end
$upscope $end
$scope begin register[45] $end
$var wire 32 x tmp [31:0] $end
$upscope $end
$scope begin register[46] $end
$var wire 32 y tmp [31:0] $end
$upscope $end
$scope begin register[47] $end
$var wire 32 z tmp [31:0] $end
$upscope $end
$scope begin register[48] $end
$var wire 32 { tmp [31:0] $end
$upscope $end
$scope begin register[49] $end
$var wire 32 | tmp [31:0] $end
$upscope $end
$scope begin register[50] $end
$var wire 32 } tmp [31:0] $end
$upscope $end
$scope begin register[51] $end
$var wire 32 ~ tmp [31:0] $end
$upscope $end
$scope begin register[52] $end
$var wire 32 !" tmp [31:0] $end
$upscope $end
$scope begin register[53] $end
$var wire 32 "" tmp [31:0] $end
$upscope $end
$scope begin register[54] $end
$var wire 32 #" tmp [31:0] $end
$upscope $end
$scope begin register[55] $end
$var wire 32 $" tmp [31:0] $end
$upscope $end
$scope begin register[56] $end
$var wire 32 %" tmp [31:0] $end
$upscope $end
$scope begin register[57] $end
$var wire 32 &" tmp [31:0] $end
$upscope $end
$scope begin register[58] $end
$var wire 32 '" tmp [31:0] $end
$upscope $end
$scope begin register[59] $end
$var wire 32 (" tmp [31:0] $end
$upscope $end
$scope begin register[60] $end
$var wire 32 )" tmp [31:0] $end
$upscope $end
$scope begin register[61] $end
$var wire 32 *" tmp [31:0] $end
$upscope $end
$scope begin register[62] $end
$var wire 32 +" tmp [31:0] $end
$upscope $end
$scope begin register[63] $end
$var wire 32 ," tmp [31:0] $end
$upscope $end
$upscope $end
$scope module registros $end
$var wire 1 % clk $end
$var wire 3 -" dirrInput [2:0] $end
$var wire 3 ." dirrOutput1 [2:0] $end
$var wire 3 /" dirrOutput2 [2:0] $end
$var wire 32 0" inputData [31:0] $end
$var wire 1 B write_en $end
$var reg 32 1" outputData1 [31:0] $end
$var reg 32 2" outputData2 [31:0] $end
$upscope $end
$upscope $end
$scope module mem $end
$var wire 16 3" address [15:0] $end
$var wire 1 % clk $end
$var wire 32 4" data_in [31:0] $end
$var wire 32 5" data_out [31:0] $end
$var wire 1 $ write $end
$scope begin register[0] $end
$var wire 32 6" tmp [31:0] $end
$upscope $end
$scope begin register[1] $end
$var wire 32 7" tmp [31:0] $end
$upscope $end
$scope begin register[2] $end
$var wire 32 8" tmp [31:0] $end
$upscope $end
$scope begin register[3] $end
$var wire 32 9" tmp [31:0] $end
$upscope $end
$scope begin register[4] $end
$var wire 32 :" tmp [31:0] $end
$upscope $end
$scope begin register[5] $end
$var wire 32 ;" tmp [31:0] $end
$upscope $end
$scope begin register[6] $end
$var wire 32 <" tmp [31:0] $end
$upscope $end
$scope begin register[7] $end
$var wire 32 =" tmp [31:0] $end
$upscope $end
$scope begin register[8] $end
$var wire 32 >" tmp [31:0] $end
$upscope $end
$scope begin register[9] $end
$var wire 32 ?" tmp [31:0] $end
$upscope $end
$scope begin register[10] $end
$var wire 32 @" tmp [31:0] $end
$upscope $end
$scope begin register[11] $end
$var wire 32 A" tmp [31:0] $end
$upscope $end
$scope begin register[12] $end
$var wire 32 B" tmp [31:0] $end
$upscope $end
$scope begin register[13] $end
$var wire 32 C" tmp [31:0] $end
$upscope $end
$scope begin register[14] $end
$var wire 32 D" tmp [31:0] $end
$upscope $end
$scope begin register[15] $end
$var wire 32 E" tmp [31:0] $end
$upscope $end
$scope begin register[16] $end
$var wire 32 F" tmp [31:0] $end
$upscope $end
$scope begin register[17] $end
$var wire 32 G" tmp [31:0] $end
$upscope $end
$scope begin register[18] $end
$var wire 32 H" tmp [31:0] $end
$upscope $end
$scope begin register[19] $end
$var wire 32 I" tmp [31:0] $end
$upscope $end
$scope begin register[20] $end
$var wire 32 J" tmp [31:0] $end
$upscope $end
$scope begin register[21] $end
$var wire 32 K" tmp [31:0] $end
$upscope $end
$scope begin register[22] $end
$var wire 32 L" tmp [31:0] $end
$upscope $end
$scope begin register[23] $end
$var wire 32 M" tmp [31:0] $end
$upscope $end
$scope begin register[24] $end
$var wire 32 N" tmp [31:0] $end
$upscope $end
$scope begin register[25] $end
$var wire 32 O" tmp [31:0] $end
$upscope $end
$scope begin register[26] $end
$var wire 32 P" tmp [31:0] $end
$upscope $end
$scope begin register[27] $end
$var wire 32 Q" tmp [31:0] $end
$upscope $end
$scope begin register[28] $end
$var wire 32 R" tmp [31:0] $end
$upscope $end
$scope begin register[29] $end
$var wire 32 S" tmp [31:0] $end
$upscope $end
$scope begin register[30] $end
$var wire 32 T" tmp [31:0] $end
$upscope $end
$scope begin register[31] $end
$var wire 32 U" tmp [31:0] $end
$upscope $end
$scope begin register[32] $end
$var wire 32 V" tmp [31:0] $end
$upscope $end
$scope begin register[33] $end
$var wire 32 W" tmp [31:0] $end
$upscope $end
$scope begin register[34] $end
$var wire 32 X" tmp [31:0] $end
$upscope $end
$scope begin register[35] $end
$var wire 32 Y" tmp [31:0] $end
$upscope $end
$scope begin register[36] $end
$var wire 32 Z" tmp [31:0] $end
$upscope $end
$scope begin register[37] $end
$var wire 32 [" tmp [31:0] $end
$upscope $end
$scope begin register[38] $end
$var wire 32 \" tmp [31:0] $end
$upscope $end
$scope begin register[39] $end
$var wire 32 ]" tmp [31:0] $end
$upscope $end
$scope begin register[40] $end
$var wire 32 ^" tmp [31:0] $end
$upscope $end
$scope begin register[41] $end
$var wire 32 _" tmp [31:0] $end
$upscope $end
$scope begin register[42] $end
$var wire 32 `" tmp [31:0] $end
$upscope $end
$scope begin register[43] $end
$var wire 32 a" tmp [31:0] $end
$upscope $end
$scope begin register[44] $end
$var wire 32 b" tmp [31:0] $end
$upscope $end
$scope begin register[45] $end
$var wire 32 c" tmp [31:0] $end
$upscope $end
$scope begin register[46] $end
$var wire 32 d" tmp [31:0] $end
$upscope $end
$scope begin register[47] $end
$var wire 32 e" tmp [31:0] $end
$upscope $end
$scope begin register[48] $end
$var wire 32 f" tmp [31:0] $end
$upscope $end
$scope begin register[49] $end
$var wire 32 g" tmp [31:0] $end
$upscope $end
$scope begin register[50] $end
$var wire 32 h" tmp [31:0] $end
$upscope $end
$scope begin register[51] $end
$var wire 32 i" tmp [31:0] $end
$upscope $end
$scope begin register[52] $end
$var wire 32 j" tmp [31:0] $end
$upscope $end
$scope begin register[53] $end
$var wire 32 k" tmp [31:0] $end
$upscope $end
$scope begin register[54] $end
$var wire 32 l" tmp [31:0] $end
$upscope $end
$scope begin register[55] $end
$var wire 32 m" tmp [31:0] $end
$upscope $end
$scope begin register[56] $end
$var wire 32 n" tmp [31:0] $end
$upscope $end
$scope begin register[57] $end
$var wire 32 o" tmp [31:0] $end
$upscope $end
$scope begin register[58] $end
$var wire 32 p" tmp [31:0] $end
$upscope $end
$scope begin register[59] $end
$var wire 32 q" tmp [31:0] $end
$upscope $end
$scope begin register[60] $end
$var wire 32 r" tmp [31:0] $end
$upscope $end
$scope begin register[61] $end
$var wire 32 s" tmp [31:0] $end
$upscope $end
$scope begin register[62] $end
$var wire 32 t" tmp [31:0] $end
$upscope $end
$scope begin register[63] $end
$var wire 32 u" tmp [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
b11111111111111111111111111111111 9"
b110011001100110001000100010001 8"
b1000000000101010101010101 7"
b1111111111111111 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
b11111111111111111111111111111111 N
b110011001100110001000100010001 M
b1000000000101010101010101 L
b1111111111111111 K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
xB
xA
b0 @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
b0 2
bx 1
bx 0
bx /
x.
bx -
x,
x+
x*
bx )
bx (
bx '
1&
0%
x$
bx #
bx "
bx !
$end
#5
1%
#10
b1111111111111111 #
b1111111111111111 -
b1111111111111111 5"
b0 !
b0 0
b0 3"
b1 @
0%
0&
#15
b1111111111111111 /
b1 2
b10 @
1%
#20
0%
#25
b0 C
b0 9
b11 @
b0 4
b0 -"
b1111111111111111 3
b1111111111111111 H
b111 5
b111 ."
b111 /"
b1111111111111111 8
b1111111111111111 0"
b111 ?
b0 6
b1111111111111111 ;
b1111111111111111 E
b0 :
b0 D
1%
#30
0%
#35
b100 @
1%
#40
0%
#45
b101 @
1%
#50
0%
#55
b1000 @
1%
#60
0%
#65
b1001 @
bx 8
bx 0"
1%
#70
0%
#75
b0 @
1B
1%
#80
0%
#85
b1000000000101010101010101 #
b1000000000101010101010101 -
b1000000000101010101010101 5"
b1 !
b1 0
b1 3"
b1 @
1%
#90
0%
#95
b1000000000101010101010101 /
b10 2
b10 @
1%
#100
0%
#105
b1 9
b11 @
b101010101010101 3
b101010101010101 H
b101 5
b101 ."
b101 /"
b101010101010101 8
b101010101010101 0"
b101 ?
b101010101010101 ;
b101010101010101 E
1%
#110
0%
#115
b100 @
1%
#120
0%
#125
b101 @
1%
#130
0%
#135
b1000 @
1%
#140
0%
#145
b1001 @
bx 8
bx 0"
1%
#150
0%
#155
b0 @
1%
#160
0%
#165
b110011001100110001000100010001 #
b110011001100110001000100010001 -
b110011001100110001000100010001 5"
b10 !
b10 0
b10 3"
b1 @
1%
#170
0%
#175
b110011001100110001000100010001 /
b11 2
b10 @
1%
#180
0%
#185
b110 C
b110011 9
b11 @
b11 4
b11 -"
b1000100010001 3
b1000100010001 H
b1 5
b1 ."
b1 /"
b1000100010001 8
b1000100010001 0"
b1 ?
b11 6
b1000100010001 ;
b1000100010001 E
b110011 :
b110011 D
1%
#190
0%
#195
b100 @
1%
#200
0%
#205
b101 @
1%
#210
0%
#215
b1000 @
1%
#220
0%
#225
b1001 @
bx 8
bx 0"
1%
#230
0%
#235
b0 @
1%
#240
0%
#245
b11111111111111111111111111111111 #
b11111111111111111111111111111111 -
b11111111111111111111111111111111 5"
b11 !
b11 0
b11 3"
b1 @
1%
#250
0%
#255
b11111111111111111111111111111111 /
b100 2
b10 @
1%
#260
0%
#265
b11111 C
b11111111 9
b11 @
b111 4
b111 -"
b1111111111111111 3
b1111111111111111 H
b111 5
b111 ."
b111 /"
b1111111111111111 8
b1111111111111111 0"
b111 ?
b111 6
b1111111111111111 ;
b1111111111111111 E
b11111111 :
b11111111 D
1%
#270
0%
#275
b1111111111111111 '
b1111111111111111 2"
b1111111111111111 1"
b100 @
1%
#280
0%
#285
b101 @
1%
#290
0%
#295
b1000 @
1%
#300
0%
#305
b1001 @
bx 8
bx 0"
1%
#310
0%
#315
bx 2"
bx '
bx 1"
b0 @
1%
#320
0%
#325
bx #
bx -
bx 5"
b100 !
b100 0
b100 3"
b1 @
1%
#330
0%
#335
bx /
b101 2
b10 @
1%
#340
0%
#345
bx C
bx 9
b11 @
bx 4
bx -"
bx 3
bx H
bx 5
bx ."
bx /"
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
bx ?
bx 6
b0xxxxxxxxxxxxxxxx ;
b0xxxxxxxxxxxxxxxx E
b0xxxxxxxx :
b0xxxxxxxx D
1%
#350
0%
#355
b100 @
1%
#360
0%
#365
b101 @
1%
#370
0%
#375
b1000 @
1%
#380
0%
#385
b1001 @
bx 8
bx 0"
1%
#390
0%
#395
b0 @
1%
#400
0%
#405
b101 !
b101 0
b101 3"
b1 @
1%
#410
0%
#415
b110 2
b10 @
1%
#420
0%
#425
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#430
0%
#435
b100 @
1%
#440
0%
#445
b101 @
1%
#450
0%
#455
b1000 @
1%
#460
0%
#465
b1001 @
bx 8
bx 0"
1%
#470
0%
#475
b0 @
1%
#480
0%
#485
b110 !
b110 0
b110 3"
b1 @
1%
#490
0%
#495
b111 2
b10 @
1%
#500
0%
#505
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#510
0%
#515
b100 @
1%
#520
0%
#525
b101 @
1%
#530
0%
#535
b1000 @
1%
#540
0%
#545
b1001 @
bx 8
bx 0"
1%
#550
0%
#555
b0 @
1%
#560
0%
#565
b111 !
b111 0
b111 3"
b1 @
1%
#570
0%
#575
b1000 2
b10 @
1%
#580
0%
#585
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#590
0%
#595
b100 @
1%
#600
0%
#605
b101 @
1%
#610
0%
#615
b1000 @
1%
#620
0%
#625
b1001 @
bx 8
bx 0"
1%
#630
0%
#635
b0 @
1%
#640
0%
#645
b1000 !
b1000 0
b1000 3"
b1 @
1%
#650
0%
#655
b1001 2
b10 @
1%
#660
0%
#665
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#670
0%
#675
b100 @
1%
#680
0%
#685
b101 @
1%
#690
0%
#695
b1000 @
1%
#700
0%
#705
b1001 @
bx 8
bx 0"
1%
#710
0%
#715
b0 @
1%
#720
0%
#725
b1001 !
b1001 0
b1001 3"
b1 @
1%
#730
0%
#735
b1010 2
b10 @
1%
#740
0%
#745
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#750
0%
#755
b100 @
1%
#760
0%
#765
b101 @
1%
#770
0%
#775
b1000 @
1%
#780
0%
#785
b1001 @
bx 8
bx 0"
1%
#790
0%
#795
b0 @
1%
#800
0%
#805
b1010 !
b1010 0
b1010 3"
b1 @
1%
#810
0%
#815
b1011 2
b10 @
1%
#820
0%
#825
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#830
0%
#835
b100 @
1%
#840
0%
#845
b101 @
1%
#850
0%
#855
b1000 @
1%
#860
0%
#865
b1001 @
bx 8
bx 0"
1%
#870
0%
#875
b0 @
1%
#880
0%
#885
b1011 !
b1011 0
b1011 3"
b1 @
1%
#890
0%
#895
b1100 2
b10 @
1%
#900
0%
#905
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#910
0%
#915
b100 @
1%
#920
0%
#925
b101 @
1%
#930
0%
#935
b1000 @
1%
#940
0%
#945
b1001 @
bx 8
bx 0"
1%
#950
0%
#955
b0 @
1%
#960
0%
#965
b1100 !
b1100 0
b1100 3"
b1 @
1%
#970
0%
#975
b1101 2
b10 @
1%
#980
0%
#985
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#990
0%
#995
b100 @
1%
#1000
0%
#1005
b101 @
1%
#1010
0%
#1015
b1000 @
1%
#1020
0%
#1025
b1001 @
bx 8
bx 0"
1%
#1030
0%
#1035
b0 @
1%
#1040
0%
#1045
b1101 !
b1101 0
b1101 3"
b1 @
1%
#1050
0%
#1055
b1110 2
b10 @
1%
#1060
0%
#1065
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#1070
0%
#1075
b100 @
1%
#1080
0%
#1085
b101 @
1%
#1090
0%
#1095
b1000 @
1%
#1100
0%
#1105
b1001 @
bx 8
bx 0"
1%
#1110
0%
#1115
b0 @
1%
#1120
0%
#1125
b1110 !
b1110 0
b1110 3"
b1 @
1%
#1130
0%
#1135
b1111 2
b10 @
1%
#1140
0%
#1145
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#1150
0%
#1155
b100 @
1%
#1160
0%
#1165
b101 @
1%
#1170
0%
#1175
b1000 @
1%
#1180
0%
#1185
b1001 @
bx 8
bx 0"
1%
#1190
0%
#1195
b0 @
1%
#1200
0%
#1205
b1111 !
b1111 0
b1111 3"
b1 @
1%
#1210
0%
#1215
b10000 2
b10 @
1%
#1220
0%
#1225
b11 @
b0xxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxx 0"
1%
#1230
0%
#1235
b100 @
1%
#1240
0%
#1245
b101 @
1%
#1250
0%
#1255
b1000 @
1%
#1260
0%
#1265
b1001 @
bx 8
bx 0"
1%
#1270
0%
#1275
b0 @
1%
#1280
0%
#1285
b10000 !
b10000 0
b10000 3"
b1 @
1%
#1290
0%
